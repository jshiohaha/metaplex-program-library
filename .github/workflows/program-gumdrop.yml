name: Program Gumdrop

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

# configuration to enable link to AWS for program artifact upload
permissions:
  id-token: write
  contents: read

env:
  CARGO_TERM_COLOR: always
  SOLANA_VERSION: 1.9.14
  RUST_TOOLCHAIN: stable
  ANCHOR_CLI_VERSION: 0.22.0

jobs:
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      core: ${{ steps.filter.outputs.core }}
      package: ${{ steps.filter.outputs.package }}
    steps:
    - uses: actions/checkout@v2
    # For pull requests it's not necessary to checkout the code
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          core:
            - 'core/**'
          package:
            - 'gumdrop/**'

  build-and-test-gumdrop:
    needs: changes
    if: ${{ needs.changes.outputs.core == 'true' || needs.changes.outputs.package == 'true' }}
    runs-on: ubuntu-latest
    env:
      cache_id: program-gumdrop

    steps:
      # Setup Deps
      - uses: actions/checkout@v2
      - uses: ./.github/actions/install-linux-build-deps
      - uses: ./.github/actions/install-solana
        with: 
          solana_version: ${{ env.SOLANA_VERSION }}
      - uses: ./.github/actions/install-rust
        with: 
          toolchain: ${{ env.RUST_TOOLCHAIN }}

      # Restore Cache from previous build/test
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ./rust/target
          key: ${{ env.cache_id }}-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ env.RUSTC_HASH }}

      # Build deps
      - uses: ./.github/actions/build-token-metadata

      # Run test
      - name: test-gumdrop-program
        id: run_test
        working-directory: ./gumdrop/program
        run: |
          cargo +${{ env.RUST_TOOLCHAIN }} test -- --nocapture --test-threads 1
          cargo +${{ env.RUST_TOOLCHAIN }} test-bpf --version
          cargo +${{ env.RUST_TOOLCHAIN }} test-bpf --bpf-out-dir ../../target/deploy/ -- --nocapture --test-threads 1

  build-and-upload-binary:
    needs: changes
    if: ${{ (needs.changes.outputs.core == 'true' || needs.changes.outputs.package == 'true') && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    env:
      cache_id: program-gumdrop-build

    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/install-linux-build-deps
      - uses: ./.github/actions/install-solana
        with:
          solana_version: ${{ env.SOLANA_VERSION }}
      - uses: ./.github/actions/install-rust
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}

      - uses: ./.github/actions/setup-aws-env/
      - name: Build and upload
        uses: ./.github/actions/build-and-upload/
        id: upload-binary-metadata
        with:
          account-id: ${{ env.BINARY_STORAGE_ACCOUNT_ID }}
          region: ${{ env.BINARY_STORAGE_REGION }}
          role: ${{ env.BINARY_STORAGE_ROLE }}
          bucket: ${{ env.BINARY_STORAGE_BUCKET }}
          working-dir: ./gumdrop/program
          program-binary: mpl_gumdrop.so
          prefix: mpl_gumdrop
